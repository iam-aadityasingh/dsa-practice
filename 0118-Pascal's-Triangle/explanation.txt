# Problem Link:
https://leetcode.com/problems/pascals-triangle/

# Problem Description:
Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it.

# Approach:
1. Start by initializing the triangle with the first two base rows: [1] and [1,1].
2. Define a helper function `traingle()` that generates the next row based on the previous one:
   - It adds 1 at the start and end of the row.
   - In between, it adds the sum of every pair of adjacent elements from the previous row.
3. Use a loop to build each row from the last until you reach `numRows`.

# Time Complexity:
O(n^2), where n = numRows.
This is because for each row, we compute and store up to `n` elements.

# Space Complexity:
O(n^2), since we store the full triangle in a list of lists.
